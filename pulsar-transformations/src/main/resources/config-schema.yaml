---
"$schema": http://json-schema.org/draft-04/schema#
components:
  schemas:
    Part:
      type: object
      properties:
        part:
          type:
            - string
            - 'null'
          description: |
            When used with KeyValue data, defines if the transformation is done on the `key` or on the `value`.
            If `null` or absent the transformation applies to both the key and the value.
          enum:
            - key
            - value
            - null
    Step:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: The type of transformation step.
        when:
          type:
            - string
            - 'null'
          description: The transformation only applies if the 'when' clause evaluates to true.
          minLength: 1
      message:
        minLength: "'when' field must not be empty"
      discriminator:
        propertyName: type
        mapping:
          drop-fields: "#/components/schemas/DropFields"
          cast: "#/components/schemas/Cast"
          merge-key-value: "#/components/schemas/MergeKeyValue"
          unwrap-key-value: "#/components/schemas/UnwrapKeyValue"
          flatten: "#/components/schemas/Flatten"
          drop: "#/components/schemas/Drop"
          compute: "#/components/schemas/Compute"
    DropFields:
      allOf:
        - "$ref": "#/components/schemas/Step"
        - type: object
          description: Drops fields of structured data (Currently only AVRO is supported).
          properties:
            type:
              type: string
              enum:
                - drop-fields
            fields:
              type: [array, 'null']
              items:
                type:
                  - string
                minLength: 1
              description: The list of fields to drop separated by commas `,`
              message:
                minLength: "field name in 'fields' must not be empty"
          required:
            - type
            - fields
        - "$ref": "#/components/schemas/Part"
    Cast:
      allOf:
        - "$ref": "#/components/schemas/Step"
        - type: object
          properties:
            type:
              type: string
              enum:
                - cast
            schema-type:
              type:
                - string
                - 'null'
              description: The target schema type.
              enum:
                - BYTES
                - STRING
                - INT8
                - INT16
                - INT32
                - INT64
                - FLOAT
                - DOUBLE
                - BOOLEAN
                - DATE
                - TIMESTAMP
                - TIME
                - LOCAL_DATE_TIME
                - LOCAL_DATE
                - LOCAL_TIME
                - INSTANT
                - null
          required:
            - schema-type
        - "$ref": "#/components/schemas/Part"
    UnwrapKeyValue:
      allOf:
        - "$ref": "#/components/schemas/Step"
        - type: object
          description: |
            If the record value is a KeyValue, extracts the KeyValue's key or value and make it the record value.
          properties:
            type:
              type: string
              enum:
                - unwrap-key-value
            unwrap-key:
              type:
                - boolean
                - 'null'
              description: By default, the value is unwrapped. Set this parameter to `true` to unwrap the key instead.
    MergeKeyValue:
      allOf:
        - "$ref": "#/components/schemas/Step"
        - type: object
          description: |
            Merges the fields of KeyValue records where both the key and value are structured types of the same
            schema type. (Currently only AVRO is supported).
          properties:
            type:
              type: string
              enum:
                - merge-key-value
    Drop:
      allOf:
        - "$ref": "#/components/schemas/Step"
        - type: object
          description: Drops the record.
          properties:
            type:
              type: string
              enum:
                - drop
    Flatten:
      allOf:
        - "$ref": "#/components/schemas/Step"
        - type: object
          description: |
            Converts structured nested data into a new single-hierarchy-level structured data.
            The names of the new fields are built by concatenating the intermediate level field names.
          properties:
            type:
              type: string
              enum:
                - flatten
            delimiter:
              type:
                - string
                - 'null'
              description: The delimiter to use when concatenating the field names.
              default: _
        - "$ref": "#/components/schemas/Part"
    Compute:
      allOf:
        - "$ref": "#/components/schemas/Step"
        - type: object
          description: Adds or updates fields dynamically based on an expression (Currently only AVRO is supported).
          properties:
            type:
              type: string
              enum:
                - compute
            fields:
              type: array
              minItems: 1
              items:
                type:
                  - object
                properties:
                  name:
                    type: string
                    description: | 
                      The name of the field to compute. If the field name already exist, it will be overwritten. 
                      Field names can be either prefixed by 'value.' or 'key.' or can be one of the following 
                      header values [destinationTopic].
                    minLength: 1
                  expression:
                    type: string
                    description: An EL-like expression to compute the field value. It can refer to other attributes in the record.
                    minLength: 1
                  type:
                    type: string
                    description: The data type of the computed fields. It should match with the output of the expression.
                    enum:
                      - STRING
                      - INT32
                      - INT64
                      - FLOAT
                      - DOUBLE
                      - BOOLEAN
                      - DATE
                      - TIME
                      - DATETIME
                  optional:
                    type: boolean
                    description: If true, the generated schema for the computed field will allow for null values.
                    default: true
                description: The list of fields to compute
                required:
                  - name
                  - expression
          required:
            - type
            - fields
        - "$ref": "#/components/schemas/Part"
type: object
properties:
  steps:
    type: array
    description: The transformation steps executed in order.
    items:
      oneOf:
        - "$ref": "#/components/schemas/DropFields"
        - "$ref": "#/components/schemas/Cast"
        - "$ref": "#/components/schemas/UnwrapKeyValue"
        - "$ref": "#/components/schemas/MergeKeyValue"
        - "$ref": "#/components/schemas/Drop"
        - "$ref": "#/components/schemas/Flatten"
        - "$ref": "#/components/schemas/Compute"
required:
  - steps
